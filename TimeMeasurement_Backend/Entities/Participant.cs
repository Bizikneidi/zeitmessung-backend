using System.ComponentModel.DataAnnotations;
using TimeMeasurement_Backend.Entities.Constraints;

namespace TimeMeasurement_Backend.Entities
{
    public class Participant
    {
        /// <summary>
        /// City
        /// only one word
        /// letters
        /// numbers
        /// hyphen,
        /// required
        /// colon
        /// slashes
        /// </summary>
        [Required]
        [RegularExpression(@"^([A-ZÄÜÖ][a-zäüö]+)([- \.\/][A-ZÄÜÖ][a-zäüö]+)*$")]
        public string City { get; set; }

        [Required]
        [IsEmail]
        public string Email { get; set; }

        /// <summary>
        /// Multiple words separated by spaces
        /// Capital initial letter, rest lower case
        /// Within words only letters
        /// At least two letters per name
        /// required
        /// </summary>
        [Required]
        [RegularExpression(@"^([A-ZÄÜÖ][a-zäüö]+)([ ][A-ZÄÜÖ][a-zäüö]+)*$")]
        public string Firstname { get; set; }

        [Required]
        [RegularExpression(@"^([A-ZÄÜÖa-zäüö0-9\/])+$")]
        public string HouseNumber { get; set; }

        /// <summary>
        /// The ID of the object (generated by EntityFramework)
        /// </summary>
        public int Id { get; set; }

        /// <summary>
        /// Lastname
        /// Needs to be a single word or more words seperated with a '-'
        /// Capital initial letter, rest lower case
        /// minimum 2 letters
        /// required
        /// </summary>
        [Required]
        [RegularExpression(@"^[A-ZÄÜÖ][a-zäüö]+(-[A-ZÄÜÖ][a-zäüö]+)?$")]
        public string Lastname { get; set; }

        /// <summary>
        /// Nationality
        /// ISO - Country
        /// Alpha 2 Code
        /// </summary>
        [IsCountry]
        public string Nationality { get; set; }

        [RegularExpression(@"^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[- \./0-9]*$")]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Post Code
        /// only one word
        /// letters
        /// numbers
        /// hyphen,
        /// required
        /// colon
        /// slashes
        /// </summary>
        [Required]
        [RegularExpression(@"^([A-ZÄÜÖa-zäüö0-9-:\/]+)$")]
        public string PostalCode { get; set; }

        /// <summary>
        /// Gender
        /// only m w or s
        /// required
        /// </summary>
        [Required]
        [RegularExpression(@"^[mws]$")]
        public string Sex { get; set; }

        [Required]
        [RegularExpression(@"^([A-ZÄÜÖ][a-zäüö]+)([- \.\/][A-ZÄÜÖ][a-zäüö]+)*$")]
        public string Street { get; set; }

        public string Team { get; set; }

        /// <summary>
        /// Yeargroup
        /// first year group: 1920
        /// </summary>
        [Required]
        [Range(1919, 3000)]
        public int YearGroup { get; set; }
    }
}